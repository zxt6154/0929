<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <!-- 引入 config.properties 外部文件（内部配置属性，便于属性的管理，使用此方法之后，需要再下一步创建该 config 配置文件） -->
<!--    <properties resource="config.properties"/>-->
    <!-- 常规配置 -->
    <context id="Mysql" targetRuntime="MyBatis3" defaultModelType="flat">

        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>
        <!-- 生成的Java文件的编码 -->
        <property name="javaFileEncoding" value="UTF-8"/>
        <!-- 格式化java代码 -->
        <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>
        <!-- 格式化XML代码 -->
        <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>

        <plugin type="org.mybatis.generator.plugins.UnmergeableXmlMappersPlugin">
            <property name="mapper" value="cn.vcinema.commentary.api.repository.mapper.BaseMapper"/>
            <property name="caseSensitive" value="true"/>
        </plugin>

        <!-- 是否去除自动生成的注释 true：是 ： false:否  -->
        <commentGenerator>
            <property name="suppressDate" value="true"/>
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>

        <!-- 引用数据库连接4大参数 -->
        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"
                        connectionURL="jdbc:mysql://127.0.0.1:3306/alice_test?useUnicode=true&amp;characterEncoding=utf-8&amp;autoReconnect=true&amp;failOverReadOnly=false&amp;zeroDateTimeBehavior=convertToNull&amp;useSSL=true&amp;serverTimezone=Asia/Shanghai&amp;allowMultiQueries=true"
                        userId="root"
                        password="root1234">
            <property name="nullCatalogMeansCurrent" value="true"/>
        </jdbcConnection>

<!--        <javaTypeResolver>-->
<!--            <property name="forceBigDecimals" value="false"/>-->
<!--        </javaTypeResolver>-->

        <!-- 配置 Java 实体类存放位置，引用的是 pom 文件中的配置参数-->
        <javaModelGenerator targetPackage="${targetModelPackage}"
                            targetProject="${targetJavaProject}">
            <property name="enableSubPackages" value="true" />
            <property name="trimStrings" value="true" />
        </javaModelGenerator>
        <!-- 配置 XxxMapper.xml 存放位置，引用的是 pom 文件中的配置参数-->
        <sqlMapGenerator targetPackage="${targetXMLPackage}"
                         targetProject="${targetResourcesProject}">
            <property name="enableSubPackages" value="true" />
            <property name="trimStrings" value="true" />
        </sqlMapGenerator>

        <!-- 配置 XxxMapper.java 接口的存放位置，引用的是 pom 文件中的配置参数-->
        <javaClientGenerator targetPackage="${targetMapperPackage}"
                             targetProject="${targetJavaProject}"
                             type="XMLMAPPER">
            <property name="enableSubPackages" value="true" />
            <property name="trimStrings" value="true" />
        </javaClientGenerator>


        <!-- 根据数据库表生成 Java 文件的相关规则 -->
        <!-- 方法1：tableName='%' 表示数据库中所有表都参与逆向工程，此时使用默认规则 -->
        <!-- 默认规则：table_dept（表名） -> TableDept（实体类名） 通常不这么使用，因为此时实体类名带了无意义的前缀 Table -->
        <!--
            <table tableName="%">
                <generatedKey column="id" sqlStatement="Mysql" identity="true"/>
            </table>
        -->
        <!-- 方法2：tableName 属性指定具体的表名，domainObjectName 属性指定对应生成的实体类名称（常用）需要把每个类都写下来，进行配置-->

        <table tableName="sku" domainObjectName="Sku"
               enableCountByExample="true" enableUpdateByExample="true" enableDeleteByExample="true" enableSelectByExample="true" selectByExampleQueryId="true">
            <!-- 配置主键生成策略，column 为数据库表的主键名 -->
            <generatedKey column="id" sqlStatement="Mysql" identity="true"/>
        </table>
    </context>


</generatorConfiguration>
