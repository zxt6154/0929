<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.3.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.example</groupId>
    <artifactId>new-module</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>new-module</name>
    <description>new-module</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>

        <mybatis-generator.version>1.4.0</mybatis-generator.version>
        <version.mybatis-spring-boot-starter>2.0.0</version.mybatis-spring-boot-starter>
        <version.druid-spring-boot-starter>1.1.18</version.druid-spring-boot-starter>
        <version.mysql>8.0.20</version.mysql>

        <version.springfox>2.9.2</version.springfox>
        <version.swagger-bootstrap-ui>1.9.1</version.swagger-bootstrap-ui>
        <version.swagger>1.5.21</version.swagger>

        <version.guava>21.0</version.guava>
        <version.commons-text>1.6</version.commons-text>
        <version.commons-collections>3.2.2</version.commons-collections>
        <version.commons-codec>1.10</version.commons-codec>
        <version.fastjson>1.2.34</version.fastjson>

        <version.httpcore>4.4.6</version.httpcore>
        <version.httpclient>4.5.3</version.httpclient>
        <version.httpasyncclient>4.1.3</version.httpasyncclient>
        <version.commons-httpclient>3.1</version.commons-httpclient>

        <version.aliyun-java-sdk-alikafka>1.2.4</version.aliyun-java-sdk-alikafka>
        <version.kafka-clients>0.10.2.2</version.kafka-clients>


        <!-- ${basedir} 引用工程根目录   /Users/alice/IdeaProjects/pumpkin_commentary_api -->
        <!-- targetJavaProject 标签：声明存放源码的目录（接口、实体类、XxxMapper.xml）-->
        <targetJavaProject>./target</targetJavaProject>
        <!-- targetMapperPackage 标签：声明 MBG 生成 XxxMapper 接口后存放的 package 位置 -->
        <!-- 公司域名倒序(com.gongsi).项目名称.包名-->
        <targetMapperPackage>com.example.newmodule.repository.mapper</targetMapperPackage>
        <!-- targetModelPackage 标签：声明 MBG 生成实体类后存放的 package 位置 -->
        <!-- 公司域名倒序(com.gongsi).项目名称.包名-->
        <targetModelPackage>com.example.newmodule.repository.entity</targetModelPackage>
        <!-- targetResourcesProject 标签：声明存放资源文件和 XML 配置文件的目录位置-->
        <targetResourcesProject>./target</targetResourcesProject>
        <!-- targetXMLPackage 标签：在 targetResourcesProject 标签所配置的目录基础上，套上这一级目录，将生成的 xml 文件放入其中-->
        <targetXMLPackage>resources.mapper</targetXMLPackage>
        <!-- 通用 mapper 的版本号 -->
        <mapper.version>4.1.5</mapper.version>

    </properties>

    <dependencies>
        <!-- springboot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>

        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>${version.mybatis-spring-boot-starter}</version>
        </dependency>
        <!-- Redis -->
        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
            <version>2.9.1</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
            <exclusions>
                <!-- 不依赖Redis的异步客户端lettuce -->
                <exclusion>
                    <groupId>io.lettuce</groupId>
                    <artifactId>lettuce-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!--easyexcel-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>easyexcel</artifactId>
            <version>2.1.6</version>
        </dependency>

        <!-- mysql -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
            <version>${version.druid-spring-boot-starter}</version>
        </dependency>

        <!-- mybatis -->
        <dependency>
            <groupId>tk.mybatis</groupId>
            <artifactId>mapper</artifactId>
            <version>4.1.5</version>
        </dependency>

        <!-- 测试相关 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
        </dependency>

        <!-- 工具包-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.20</version>
        </dependency>

        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.6</version>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${version.guava}</version>
        </dependency>

        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <version>${version.commons-collections}</version>
            <type>jar</type>
        </dependency>

        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>5.8.0.M3</version>
        </dependency>

        <!--json转换-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${version.fastjson}</version>
        </dependency>

        <!-- SpringBoot - MyBatis 逆向工程 -->
        <dependency>
            <groupId>org.mybatis.generator</groupId>
            <artifactId>mybatis-generator-core</artifactId>
            <version>${mybatis-generator.version}</version>
        </dependency>

<!--        <dependency>-->
<!--            <groupId>org.mybatis</groupId>-->
<!--            <artifactId>mybatis-typehandlers-jsr310</artifactId>-->
<!--            <version>1.0.2</version>-->
<!--        </dependency>-->

    </dependencies>

    <build>

<!--        <resources>-->
<!--            <resource>-->
<!--                <directory>src/main/resources</directory>-->
<!--                <filtering>false</filtering>-->
<!--                <includes>-->
<!--                    <include>**/*.xml</include>-->
<!--&lt;!&ndash;                    <include>application.yml</include>&ndash;&gt;-->
<!--                </includes>-->
<!--            </resource>-->
<!--        </resources>-->



        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-maven-plugin</artifactId>
                <version>${mybatis-generator.version}</version>
                <configuration>
                    <configurationFile>
                        generatorConfig.xml
                    </configurationFile>
                    <overwrite>true</overwrite>
                    <verbose>true</verbose>
                </configuration>
                <!-- MBG 插件的依赖信息 -->
                <dependencies>
                    <!-- 通用 mapper 生成代码时，需要读取数据库。并且引用前面配置的版本号属性 -->
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>${version.mysql}</version>
                    </dependency>
                    <!-- 通用 mapper 的版本号 -->
                    <dependency>
                        <groupId>tk.mybatis</groupId>
                        <artifactId>mapper</artifactId>
                        <version>4.1.5</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>

</project>
